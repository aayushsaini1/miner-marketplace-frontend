{"ast":null,"code":"var _jsxFileName = \"/Users/saumay/Desktop/miner-marketplace-frontend/src/components/SearchBar.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table } from 'antd';\nexport class SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.columns = [{\n      title: 'Address',\n      dataIndex: 'Address',\n      align: 'left'\n    }, // {\n    //     title: 'Activation Round',\n    //     dataIndex: 'ActivationRound',\n    //     align: 'center',\n    //     sorter: {\n    //         compare: (a, b) => a.ActivationRound - b.ActivationRound\n    //     },\n    // },\n    // {\n    //     title: 'Last Reward Round',\n    //     dataIndex: 'LastRewardRound',\n    //     align: 'center',\n    //     sorter: {\n    //         compare: (a, b) => a.LastRewardRound - b.LastRewardRound\n    //     },\n    // },\n    {\n      title: 'Delegated Stake',\n      dataIndex: 'DelegatedStake',\n      align: 'right',\n      sorter: {\n        compare: (a, b) => a.DelegatedStakeRaw - b.DelegatedStakeRaw\n      }\n    }, {\n      title: 'Reward Cut',\n      dataIndex: 'RewardCut',\n      align: 'right',\n      sorter: {\n        compare: (a, b) => a.RewardCut - b.RewardCut\n      },\n      render: text => text + \"%\"\n    }, {\n      title: 'Fee Share',\n      dataIndex: 'FeeShare',\n      align: 'right',\n      sorter: {\n        compare: (a, b) => a.FeeShare - b.FeeShare\n      },\n      render: text => text + \"%\"\n    }, {\n      title: 'Total Fees Earned',\n      dataIndex: 'TotalGeneratedFees',\n      align: 'right',\n      sorter: {\n        compare: (a, b) => a.TotalGeneratedFeesRaw - b.TotalGeneratedFeesRaw\n      }\n    }, {\n      title: 'Price Per Pixel',\n      dataIndex: 'PricePerPixel',\n      align: 'right',\n      sorter: {\n        compare: (a, b) => a.PricePerPixelRaw - b.PricePerPixelRaw\n      }\n    }, {\n      title: 'Price History',\n      align: 'center',\n      render: function (text, record, index) {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: \"/priceHistory/\" + record.Address,\n            address: record.Address\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }\n        }, \"View\");\n      }\n    } // {\n    //     title: 'Active',\n    //     dataIndex: 'Active',\n    //     align: 'center',\n    // },\n    // {\n    //     title: 'Status',\n    //     dataIndex: 'Status',\n    //     align: 'center',\n    // },\n    ];\n  }\n\n  formatNumber(num, prec) {\n    num = num.toFixed(prec);\n    num = num.toString();\n    let numstring = \"\";\n    let periodpos = num.indexOf(\".\");\n    let flag = 0;\n    numstring = num.slice(periodpos, num.length);\n\n    for (let index = periodpos; index > 0; index = index - 3) {\n      let start = index - 3;\n\n      if (start < 0) {\n        start = 0;\n      }\n\n      if (flag === 0) {\n        numstring = num.slice(start, index) + numstring;\n        flag = 1;\n      } else {\n        numstring = num.slice(start, index) + \",\" + numstring;\n      }\n    }\n\n    return numstring;\n  }\n\n  processDelegatedStake(ds) {\n    if (ds > 10 ** 15) {\n      return this.formatNumber(ds / 10 ** 18, 3) + \" LPT\";\n    } else {\n      return this.formatNumber(ds, 3) + \" LPTU\";\n    }\n  }\n\n  processFees(fees) {\n    fees = fees * 1.0;\n    return this.formatNumber(fees / 10 ** 18, 6) + \" ETH\";\n  }\n\n  processPPP(ppp) {\n    if (ppp < 0) {\n      return \"-\" + this.formatNumber(Math.abs(ppp), 3) + \" wei\";\n    } else {\n      return this.formatNumber(Math.abs(ppp), 3) + \" wei\";\n    }\n  }\n\n  preprocessData(data) {\n    let newdata = [];\n    data.forEach(element => {\n      newdata.push({\n        key: element.Address,\n        Address: element.Address,\n        ServiceURI: element.ServiceURI,\n        LastRewardRound: element.LastRewardRound,\n        RewardCut: element.RewardCut / 10000,\n        FeeShare: element.FeeShare / 10000,\n        DelegatedStakeRaw: element.DelegatedStake,\n        DelegatedStake: this.processDelegatedStake(element.DelegatedStake),\n        ActivationRound: element.ActivationRound,\n        DeactivationRound: element.DeactivationRound,\n        Active: element.Active ? \"Active\" : \"Inactive\",\n        Status: element.Status,\n        PricePerPixelRaw: element.PricePerPixel,\n        PricePerPixel: this.processPPP(element.PricePerPixel),\n        UpdatedAt: element.UpdatedAt,\n        TotalGeneratedFeesRaw: element.TotalGeneratedFees,\n        TotalGeneratedFees: this.processFees(element.TotalGeneratedFees)\n      });\n    });\n    return newdata;\n  }\n\n  onChange(pagination, filters, sorter, extra) {\n    console.log('params', pagination, filters, sorter, extra);\n  }\n\n  render() {\n    const data = this.preprocessData(this.props.data);\n    return /*#__PURE__*/React.createElement(Table, {\n      columns: this.columns,\n      dataSource: data,\n      onChange: this.onChange,\n      pagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\nexport default SearchBar;","map":{"version":3,"sources":["/Users/saumay/Desktop/miner-marketplace-frontend/src/components/SearchBar.js"],"names":["React","Component","Link","Table","SearchBar","columns","title","dataIndex","align","sorter","compare","a","b","DelegatedStakeRaw","RewardCut","render","text","FeeShare","TotalGeneratedFeesRaw","PricePerPixelRaw","record","index","pathname","Address","address","formatNumber","num","prec","toFixed","toString","numstring","periodpos","indexOf","flag","slice","length","start","processDelegatedStake","ds","processFees","fees","processPPP","ppp","Math","abs","preprocessData","data","newdata","forEach","element","push","key","ServiceURI","LastRewardRound","DelegatedStake","ActivationRound","DeactivationRound","Active","Status","PricePerPixel","UpdatedAt","TotalGeneratedFees","onChange","pagination","filters","extra","console","log","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Table } from 'antd';\n\nexport class SearchBar extends Component {\n\n    columns = [\n    {\n        title: 'Address',\n        dataIndex: 'Address',\n        align: 'left',\n    },\n    // {\n    //     title: 'Activation Round',\n    //     dataIndex: 'ActivationRound',\n    //     align: 'center',\n    //     sorter: {\n    //         compare: (a, b) => a.ActivationRound - b.ActivationRound\n    //     },\n    // },\n    // {\n    //     title: 'Last Reward Round',\n    //     dataIndex: 'LastRewardRound',\n    //     align: 'center',\n    //     sorter: {\n    //         compare: (a, b) => a.LastRewardRound - b.LastRewardRound\n    //     },\n    // },\n    {\n        title: 'Delegated Stake',\n        dataIndex: 'DelegatedStake',\n        align: 'right',\n        sorter: {\n            compare: (a, b) => a.DelegatedStakeRaw - b.DelegatedStakeRaw\n        },\n    },\n    {\n        title: 'Reward Cut',\n        dataIndex: 'RewardCut',\n        align: 'right',\n        sorter: {\n            compare: (a, b) => a.RewardCut - b.RewardCut\n        },\n        render: (text) => text + \"%\"\n    },\n    {\n        title: 'Fee Share',\n        dataIndex: 'FeeShare',\n        align: 'right',\n        sorter: {\n            compare: (a, b) => a.FeeShare - b.FeeShare\n        },\n        render: (text) => text + \"%\"\n    },\n    {\n        title: 'Total Fees Earned',\n        dataIndex: 'TotalGeneratedFees',\n        align: 'right',\n        sorter: {\n            compare: (a, b) => a.TotalGeneratedFeesRaw - b.TotalGeneratedFeesRaw\n        }\n    },\n    {\n        title: 'Price Per Pixel',\n        dataIndex: 'PricePerPixel',\n        align: 'right',\n        sorter: {\n            compare: (a, b) => a.PricePerPixelRaw - b.PricePerPixelRaw\n        }\n    },\n    {\n        title: 'Price History',\n        align: 'center',\n        render: function (text, record, index) {\n            return (\n                <Link to={{\n                    pathname: \"/priceHistory/\"+record.Address,\n                    address: record.Address\n                }}>\n                    { \"View\" }\n                </Link>\n            )\n        }\n    },\n    // {\n    //     title: 'Active',\n    //     dataIndex: 'Active',\n    //     align: 'center',\n    // },\n    // {\n    //     title: 'Status',\n    //     dataIndex: 'Status',\n    //     align: 'center',\n    // },\n    ];\n\n    formatNumber(num, prec) {\n        num = num.toFixed(prec)\n        num = num.toString()\n        let numstring = \"\"\n        let periodpos = num.indexOf(\".\")\n        let flag = 0\n        numstring = num.slice(periodpos, num.length)\n        for (let index = periodpos; index > 0; index=index-3) {\n            let start = index - 3\n            if (start < 0) {\n                start = 0\n            }\n            if(flag===0) {\n                numstring = num.slice(start, index) + numstring\n                flag = 1\n            } else {\n                numstring = num.slice(start, index) + \",\" + numstring\n            }\n        }\n        return numstring\n    }\n\n    processDelegatedStake(ds) {\n        if (ds > 10**15) {\n            return this.formatNumber(ds / 10**18, 3) + \" LPT\"\n        } else {\n            return this.formatNumber(ds, 3) + \" LPTU\"\n        }\n    }\n\n    processFees(fees) {\n        fees = fees * 1.0\n        return this.formatNumber(fees / 10**18, 6) + \" ETH\"\n    }\n\n    processPPP(ppp) {\n        if (ppp < 0) {\n            return \"-\" + this.formatNumber(Math.abs(ppp), 3) + \" wei\"\n        } else {\n            return this.formatNumber(Math.abs(ppp), 3) + \" wei\"\n        }\n    }\n\n    preprocessData(data) {\n        let newdata = []\n        data.forEach(element => {\n            newdata.push({\n                key: element.Address,\n                Address: element.Address,\n                ServiceURI: element.ServiceURI,\n                LastRewardRound: element.LastRewardRound,\n                RewardCut: element.RewardCut / 10000,\n                FeeShare: element.FeeShare / 10000,\n                DelegatedStakeRaw: element.DelegatedStake,\n                DelegatedStake: this.processDelegatedStake(element.DelegatedStake),\n                ActivationRound: element.ActivationRound,\n                DeactivationRound: element.DeactivationRound,\n                Active: (element.Active ? \"Active\" : \"Inactive\"),\n                Status: element.Status,\n                PricePerPixelRaw: element.PricePerPixel,\n                PricePerPixel: this.processPPP(element.PricePerPixel),\n                UpdatedAt: element.UpdatedAt,\n                TotalGeneratedFeesRaw: element.TotalGeneratedFees,\n                TotalGeneratedFees: this.processFees(element.TotalGeneratedFees),\n            })\n        });\n        return newdata\n    }\n\n    onChange (pagination, filters, sorter, extra) {\n        console.log('params', pagination, filters, sorter, extra);\n    }\n    \n    \n    render() {\n        const data = this.preprocessData(this.props.data)\n        return (\n            <Table columns={this.columns} dataSource={data} onChange={this.onChange} pagination={false}/>\n        )\n    }\n}\n\nexport default SearchBar\n"]},"metadata":{},"sourceType":"module"}