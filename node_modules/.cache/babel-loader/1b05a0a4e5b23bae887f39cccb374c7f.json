{"ast":null,"code":"var _jsxFileName = \"/Users/saumay/Desktop/miner-marketplace-frontend/src/components/pages/MinerSearch.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SearchBar from '../SearchBar';\nimport { PageHeader } from 'antd';\nimport Config from '../../Config';\nexport class MinerSearch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null,\n      responseStatus: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(Config.api_url + '/MinerSearch').then(res => {\n      axios.post(Config.livepeer_api, {\n        query: `{\n                            transcoders (orderBy:totalGeneratedFees) {\n                                totalGeneratedFees\n                                id\n                            }\n                        }`,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(result => {\n        result = result.data.data.transcoders; // console.log(result)\n\n        let new_data = res.data;\n\n        for (let i = 0; i < new_data.length; i++) {\n          new_data[i][\"TotalGeneratedFees\"] = null;\n\n          for (let j = 0; j < result.length; j++) {\n            if (new_data[i].Address === result[j].id) {\n              // console.log(new_data[i].Address, result[j].id)\n              new_data[i][\"TotalGeneratedFees\"] = Number(result[j].totalGeneratedFees);\n              break;\n            }\n          }\n        } // console.log(new_data)\n\n\n        this.setState({\n          data: new_data,\n          responseStatus: \"success\"\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          data: null,\n          responseStatus: \"failed\"\n        });\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        data: null,\n        responseStatus: \"failed\"\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.responseStatus) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, \"Fetching data from the server...\"));\n    } else {\n      if (this.state.data) {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PageHeader, {\n          className: \"site-page-header\",\n          backIcon: \"false\",\n          title: \"Miner Search\",\n          subTitle: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(SearchBar, {\n          data: this.state.data,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }\n        }, \"Error in fetching data from the server. See console for more details.\"));\n      }\n    }\n  }\n\n}\nexport default MinerSearch;","map":{"version":3,"sources":["/Users/saumay/Desktop/miner-marketplace-frontend/src/components/pages/MinerSearch.js"],"names":["React","Component","axios","SearchBar","PageHeader","Config","MinerSearch","state","data","responseStatus","componentDidMount","get","api_url","then","res","post","livepeer_api","query","headers","result","transcoders","new_data","i","length","j","Address","id","Number","totalGeneratedFees","setState","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport SearchBar from '../SearchBar'\nimport { PageHeader } from 'antd';\nimport Config from '../../Config'\n\nexport class MinerSearch extends Component {\n\n    state = {\n        data: null,\n        responseStatus: null\n    }\n\n    componentDidMount() {\n        axios.get(Config.api_url + '/MinerSearch')\n            .then(res => {\n\n                axios.post(Config.livepeer_api, {\n                    query: `{\n                            transcoders (orderBy:totalGeneratedFees) {\n                                totalGeneratedFees\n                                id\n                            }\n                        }`,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                })\n                .then((result) => {\n                    result = result.data.data.transcoders\n                    // console.log(result)\n                    let new_data = res.data\n\n                    for (let i = 0; i < new_data.length; i++) {\n                        new_data[i][\"TotalGeneratedFees\"] = null\n                        for (let j = 0; j < result.length; j++) {\n                            if (new_data[i].Address === result[j].id) {\n                                // console.log(new_data[i].Address, result[j].id)\n                                new_data[i][\"TotalGeneratedFees\"] = Number(result[j].totalGeneratedFees)\n                                break\n                            }\n                        } \n                    }\n                    // console.log(new_data)\n                    this.setState({ data: new_data, responseStatus: \"success\" })\n                })\n                .catch(err => {\n                    console.log(err)\n                    this.setState({ data: null, responseStatus: \"failed\" })\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                this.setState({ data: null, responseStatus: \"failed\" })\n            })\n    }\n\n    render() {\n        if (!this.state.responseStatus) {\n            return (\n                <React.Fragment>\n                    <p>Fetching data from the server...</p>\n                </React.Fragment>\n            )\n        } else {\n            if (this.state.data) {\n                return (\n                    <React.Fragment>\n                        <PageHeader\n                            className=\"site-page-header\"\n                            backIcon=\"false\"\n                            title=\"Miner Search\"\n                            subTitle=\"\"\n                        />\n                        <SearchBar data={this.state.data} />\n                    </React.Fragment>\n                )\n            } else {\n                return (\n                    <React.Fragment>\n                        <p>Error in fetching data from the server. See console for more details.</p>\n                    </React.Fragment>\n                )\n            }\n        }\n    }\n}\n\nexport default MinerSearch\n"]},"metadata":{},"sourceType":"module"}