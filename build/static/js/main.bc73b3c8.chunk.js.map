{"version":3,"sources":["logo.svg","components/SearchBar.js","Config.js","components/pages/MinerSearch.js","components/TransactionTable.js","components/AddressChangeTable.js","components/pages/MinerProfile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBar","redirectToProfile","value","history","props","push","onSearch","console","log","Search","Input","direction","style","marginLeft","placeholder","this","width","Component","withRouter","Config","api_url","livepeer_api","miner_marketplace_api","MinerSearch","state","data","responseStatus","Fragment","textAlign","fontSize","TransactionTable","columns","title","dataIndex","align","sorter","compare","a","b","filters","getFilters","onFilter","record","indexOf","amount","render","formatFIL","sender","receiver","height","parseInt","minerFee","burnFee","actorName","methodName","toFixed","toString","pagination","extra","key","values","forEach","item","filter","x","i","dataSource","onChange","AddressChangeTable","epoch","MinerProfile","Layout","Header","Content","Footer","match","params","address","axios","post","query","variables","id","headers","then","res","minerdata","miner","get","textiledata","info","location","metadata","qualityIndicators","relativePower","filecoin","activeSectors","serviceDetails","storageAskPrice","askPrice","sectorSize","minPieceSize","maxPieceSize","storageDealSummary","dealsSummary","retrievalDealSummary","retrievalsSummary","minerId","ownerChanges","workerChanges","setState","catch","err","className","backIcon","subTitle","name","bio","owner","worker","verified","contact","slack","twitter","email","website","storage","retrieval","repair","onlineDeals","offlineDeals","retrievalAskPrice","formatAdjPower","financeMetrics","totalIncome","totalExpenditure","blockRewards","retrievalDealPayments","networkFee","penalty","preCommitDeposits","initialPledge","lockedFunds","availableFunds","winCount","blocksMined","qualityAdjPower","faultySectors","transactions","App","span","to","color","padding","minHeight","exact","path","target","rel","href","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.bc73b3c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8b4f5be4.svg\";","import React, { Component, useState } from 'react'\nimport { AutoComplete } from 'antd';\nimport { Input, Space } from 'antd';\nimport { useHistory, withRouter } from \"react-router-dom\"\n\nexport class SearchBar extends Component {\n\n    redirectToProfile = (value) => {\n        const { history } = this.props;\n        if(history) history.push(\"/miner/\"+value);\n       }\n\n    onSearch = (value) => {\n        console.log(value);\n        this.redirectToProfile(value);\n    }\n\n    render() {\n\n        // const [value, setValue] = useState();\n        // const [options, setOptions] = useState();\n\n        // const onSearch = (searchText) => {\n        //     setOptions(\n        //         !searchText ? [] : options,\n        //     );\n        // };\n\n        // const onSelect = (data) => {\n        //     console.log('onSelect', data);\n        // };\n\n        // const onChange = (data) => {\n        //     setValue(data);\n        // };\n\n\n        // return (\n        //     <AutoComplete\n        //         options={options}\n        //         style={{ width: 400 }}\n        //         onSelect={onSelect}\n        //         onSearch={onSearch}\n        //         placeholder=\"Enter Miner Address\"\n        //     />\n        // )\n\n        const { Search } = Input;\n\n        return (\n            <Space direction=\"vertical\" style={{ marginLeft: \"30vw\" }}>\n                <Search placeholder=\"Enter miner address\" onSearch={this.onSearch} style={{ width: 400}} />\n            </Space>\n        )\n    }\n}\n\nexport default withRouter(SearchBar)\n","const Config = {\n    api_url: \"https://livepeer-pricing-tool.com\",\n    livepeer_api: \"https://api.thegraph.com/subgraphs/name/livepeer/livepeer\",\n    miner_marketplace_api: \"https://miner-marketplace-backend.onrender.com/query\"\n}\n\nexport default Config","import React, { Component } from 'react'\nimport axios from 'axios'\nimport SearchBar from '../SearchBar'\nimport { PageHeader } from 'antd';\nimport Config from '../../Config'\n\nexport class MinerSearch extends Component {\n\n    state = {\n        data: null,\n        responseStatus: null,\n    }\n\n    // componentDidMount() {\n        \n    //             axios.post(Config.miner_marketplace_api, {\n    //                 query: `query {\n    //                     allMiners {\n    //                       id\n    //                     }\n    //                   }`,\n    //                 headers: {\n    //                     'Content-Type': 'application/json'\n    //                 }\n    //             })\n    //             .then((result) => {\n    //                 console.log(result.data)\n    //                 result = result.data.data.allMiners\n    //                 console.log(result)\n    //                 // let minerIds = []\n\n    //                 // for (let i = 0; i < result.length; i++) {\n    //                 //     minerIds.push(result[i].id)\n    //                 // }\n    //                 // console.log(minerIds)\n    //                 this.setState({ data: { result }, responseStatus: \"success\" })\n    //             })\n    //             .catch(err => {\n    //                 console.log(err)\n    //                 this.setState({ data: null, responseStatus: \"failed\" })\n    //             })\n            \n    // }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                {/* <PageHeader\n                    className=\"site-page-header\"\n                    backIcon=\"false\"\n                    title=\"Miner Search\"\n                    subTitle=\"\"\n                /> */}\n                <div >\n                    {/* <h1>Miner Search</h1>\n                    <SearchBar options={this.state.data} /> */}\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                    <p style={{ textAlign: 'center', fontSize: 'large'}}>Search for a miner profile by entering the miner's address in the search bar below.</p>\n                    <br></br>\n                    <SearchBar />\n                </div>\n                \n            </React.Fragment>\n        )\n\n        // if (!this.state.responseStatus) {\n        //     return (\n        //         <React.Fragment>\n        //             <p>Fetching data from the server...</p>\n        //         </React.Fragment>\n        //     )\n        // } else {\n        //     if (this.state.data) {\n        //         return (\n        //             <React.Fragment>\n        //                 {/* <PageHeader\n        //                     className=\"site-page-header\"\n        //                     backIcon=\"false\"\n        //                     title=\"Miner Search\"\n        //                     subTitle=\"\"\n        //                 /> */}\n        //                 <div style={{ width: \"80vw\", height: \"75vh\", justifyContent:\"center\", alignContent:\"center\"}}>\n        //                     {/* <h1>Miner Search</h1>\n        //                     <SearchBar options={this.state.data} /> */}\n        //                     <p>Search for a miner profile by entering a miner's address in the search bar.</p>\n        //                 </div>\n                        \n        //             </React.Fragment>\n        //         )\n        //     } else {\n        //         return (\n        //             <React.Fragment>\n        //                 <p>Error in fetching data from the server. See console for more details.</p>\n        //             </React.Fragment>\n        //         )\n        //     }\n        // }\n    }\n}\n\nexport default MinerSearch\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Table } from 'antd';\n\nexport class TransactionTable extends Component {\n\n    // columns = [\n    // {\n    //     title: 'Address',\n    //     dataIndex: 'Address',\n    //     align: 'left',\n    // },\n    // {\n    //     title: 'Activation Round',\n    //     dataIndex: 'ActivationRound',\n    //     align: 'center',\n    //     sorter: {\n    //         compare: (a, b) => a.ActivationRound - b.ActivationRound\n    //     },\n    // },\n    // {\n    //     title: 'Last Reward Round',\n    //     dataIndex: 'LastRewardRound',\n    //     align: 'center',\n    //     sorter: {\n    //         compare: (a, b) => a.LastRewardRound - b.LastRewardRound\n    //     },\n    // },\n    // {\n    //     title: 'Delegated Stake',\n    //     dataIndex: 'DelegatedStake',\n    //     align: 'right',\n    //     sorter: {\n    //         compare: (a, b) => a.DelegatedStakeRaw - b.DelegatedStakeRaw\n    //     },\n    // },\n    // {\n    //     title: 'Reward Cut',\n    //     dataIndex: 'RewardCut',\n    //     align: 'right',\n    //     sorter: {\n    //         compare: (a, b) => a.RewardCut - b.RewardCut\n    //     },\n    //     render: (text) => text + \"%\"\n    // },\n    // {\n    //     title: 'Fee Share',\n    //     dataIndex: 'FeeShare',\n    //     align: 'right',\n    //     sorter: {\n    //         compare: (a, b) => a.FeeShare - b.FeeShare\n    //     },\n    //     render: (text) => text + \"%\"\n    // },\n    // {\n    //     title: 'Total Fees Earned',\n    //     dataIndex: 'TotalGeneratedFees',\n    //     align: 'right',\n    //     sorter: {\n    //         compare: (a, b) => a.TotalGeneratedFeesRaw - b.TotalGeneratedFeesRaw\n    //     }\n    // },\n    // {\n    //     title: 'Price Per Pixel',\n    //     dataIndex: 'PricePerPixel',\n    //     align: 'right',\n    //     sorter: {\n    //         compare: (a, b) => a.PricePerPixelRaw - b.PricePerPixelRaw\n    //     }\n    // },\n    // {\n    //     title: 'Price History',\n    //     align: 'center',\n    //     render: function (text, record, index) {\n    //         return (\n    //             <Link to={{\n    //                 pathname: \"/priceHistory/\"+record.Address,\n    //                 address: record.Address\n    //             }}>\n    //                 { \"View\" }\n    //             </Link>\n    //         )\n    //     }\n    // },\n    // // {\n    // //     title: 'Active',\n    // //     dataIndex: 'Active',\n    // //     align: 'center',\n    // // },\n    // // {\n    // //     title: 'Status',\n    // //     dataIndex: 'Status',\n    // //     align: 'center',\n    // // },\n    // ];\n\n    // formatNumber(num, prec) {\n    //     num = num.toFixed(prec)\n    //     num = num.toString()\n    //     let numstring = \"\"\n    //     let periodpos = num.indexOf(\".\")\n    //     let flag = 0\n    //     numstring = num.slice(periodpos, num.length)\n    //     for (let index = periodpos; index > 0; index=index-3) {\n    //         let start = index - 3\n    //         if (start < 0) {\n    //             start = 0\n    //         }\n    //         if(flag===0) {\n    //             numstring = num.slice(start, index) + numstring\n    //             flag = 1\n    //         } else {\n    //             numstring = num.slice(start, index) + \",\" + numstring\n    //         }\n    //     }\n    //     return numstring\n    // }\n\n    // processDelegatedStake(ds) {\n    //     if (ds > 10**15) {\n    //         return this.formatNumber(ds / 10**18, 3) + \" LPT\"\n    //     } else {\n    //         return this.formatNumber(ds, 3) + \" LPTU\"\n    //     }\n    // }\n\n    // processFees(fees) {\n    //     fees = fees * 1.0\n    //     return this.formatNumber(fees / 10**18, 6) + \" ETH\"\n    // }\n\n    // processPPP(ppp) {\n    //     if (ppp < 0) {\n    //         return \"-\" + this.formatNumber(Math.abs(ppp), 3) + \" wei\"\n    //     } else {\n    //         return this.formatNumber(Math.abs(ppp), 3) + \" wei\"\n    //     }\n    // }\n\n    // preprocessData(data) {\n    //     let newdata = []\n    //     data.forEach(element => {\n    //         newdata.push({\n    //             key: element.Address,\n    //             Address: element.Address,\n    //             ServiceURI: element.ServiceURI,\n    //             LastRewardRound: element.LastRewardRound,\n    //             RewardCut: element.RewardCut / 10000,\n    //             FeeShare: element.FeeShare / 10000,\n    //             DelegatedStakeRaw: element.DelegatedStake,\n    //             DelegatedStake: this.processDelegatedStake(element.DelegatedStake),\n    //             ActivationRound: element.ActivationRound,\n    //             DeactivationRound: element.DeactivationRound,\n    //             Active: (element.Active ? \"Active\" : \"Inactive\"),\n    //             Status: element.Status,\n    //             PricePerPixelRaw: element.PricePerPixel,\n    //             PricePerPixel: this.processPPP(element.PricePerPixel),\n    //             UpdatedAt: element.UpdatedAt,\n    //             TotalGeneratedFeesRaw: element.TotalGeneratedFees,\n    //             TotalGeneratedFees: this.processFees(element.TotalGeneratedFees),\n    //         })\n    //     });\n    //     return newdata\n    // }\n\n    // onChange (pagination, filters, sorter, extra) {\n    //     console.log('params', pagination, filters, sorter, extra);\n    // }\n\n    formatFIL(value) {\n        value = parseInt(value)\n        // console.log(value, typeof(value))\n        value = value / (10**18)\n        // console.log(value)\n        value = value.toFixed(4)\n        // console.log(value)\n        return value.toString() + \" FIL\"\n    }\n \n    columns = [\n        {\n            title: \"Transaction Type\",\n            dataIndex: \"direction\",\n            align: \"left\",\n            sorter: {\n                compare: (a, b) => a.direction - b.direction\n            },\n            filters: this.getFilters(\"direction\"),\n            onFilter: (value, record) => record.direction.indexOf(value) === 0,\n        },\n        {\n            title: \"Amount\",\n            dataIndex: \"amount\",\n            align: \"left\",\n            sorter: {\n                compare: (a, b) => a.amount - b.amount\n            },\n            render: (value) => this.formatFIL(value) \n        },\n        {\n            title: \"Sender\",\n            dataIndex: \"sender\",\n            align: \"left\",\n            filters: this.getFilters(\"sender\"),\n            onFilter: (value, record) => record.sender.indexOf(value) === 0,\n        },\n        {\n            title: \"Receiver\",\n            dataIndex: \"receiver\",\n            align: \"left\",\n            filters: this.getFilters(\"receiver\"),\n            onFilter: (value, record) => record.receiver.indexOf(value) === 0,\n        },\n        {\n            title: \"Height\",\n            dataIndex: \"height\",\n            align: \"left\",\n            sorter: {\n                compare: (a, b) => a.height - b.height\n            }\n        },\n        {\n            title: \"Miner Fee\",\n            dataIndex: \"minerFee\",\n            align: \"left\",\n            sorter: {\n                compare: (a, b) => parseInt(a.minerFee) - parseInt(b.minerFee)\n            },\n            render: (value) => this.formatFIL(value) \n        },\n        {\n            title: \"Burn Fee\",\n            dataIndex: \"burnFee\",\n            align: \"left\",\n            sorter: {\n                compare: (a, b) => parseInt(a.burnFee) - parseInt(b.burnFee)\n            },\n            render: (value) => this.formatFIL(value) \n        },\n        {\n            title: \"Actor Name\",\n            dataIndex: \"actorName\",\n            align: \"left\",\n            sorter: {\n                compare: (a, b) => a.actorName - b.actorName\n            },\n            filters: this.getFilters(\"actorName\"),\n            onFilter: (value, record) => record.actorName.indexOf(value) === 0,\n        },{\n            title: \"Method\",\n            dataIndex: \"methodName\",\n            align: \"left\",\n            sorter: {\n                compare: (a, b) => a.methodName - b.methodName\n            },\n            filters: this.getFilters(\"methodName\"),\n            onFilter: (value, record) => record.methodName.indexOf(value) === 0,\n        },\n    ]\n\n    onChange (pagination, filters, sorter, extra) {\n            console.log('params', pagination, filters, sorter, extra);\n        }\n    \n    getFilters(key) {\n        \n        // console.log(key)\n        const data = this.props.data\n        \n        var values = []\n        data.forEach(function (item) {\n            values.push(item[key])\n        })\n        // console.log(values)\n        \n        values = values.filter((x, i, a) => a.indexOf(x) === i)\n        // console.log(values)\n        \n        var filters = []\n        values.forEach(function (item) {\n            filters.push({\n                'text': item.toString(),\n                'value': item\n            })\n        })\n        // console.log(filters)\n\n        return filters\n    }\n    \n    render() {\n        // const data = this.preprocessData(this.props.data)\n        return (\n            <Table columns={this.columns} dataSource={this.props.data} onChange={this.onChange} pagination={true}/>\n        )\n    }\n}\n\nexport default TransactionTable\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Table } from 'antd';\n\nexport class AddressChangeTable extends Component {\n \n    columns = [\n        {\n            title: \"Epoch\",\n            dataIndex: \"epoch\",\n            align: \"left\",\n            sorter: {\n                compare: (a, b) => parseInt(a.epoch) - parseInt(b.epoch)\n            }\n        },\n        {\n            title: \"From\",\n            dataIndex: \"from\",\n            align: \"left\"\n        },\n        {\n            title: \"To\",\n            dataIndex: \"to\",\n            align: \"left\"\n        }\n    ]\n\n    onChange (pagination, filters, sorter, extra) {\n            console.log('params', pagination, filters, sorter, extra);\n        }\n    \n    render() {\n        // const data = this.preprocessData(this.props.data)\n        return (\n            <Table columns={this.columns} dataSource={this.props.data} onChange={this.onChange} pagination={false}/>\n        )\n    }\n}\n\nexport default AddressChangeTable\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { PageHeader } from 'antd';\nimport Config from '../../Config';\n\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Card } from 'antd';\nimport TransactionTable from '../TransactionTable';\nimport AddressChangeTable from '../AddressChangeTable';\nconst { Header, Content, Footer } = Layout;\n\n\n\nexport class MinerProfile extends Component {\n\n    state = {\n        data: null,\n        responseStatus: null\n    }\n\n    componentDidMount() {\n        console.log(this.props.match.params.address + \" miner id\")\n        axios.post(Config.miner_marketplace_api, {\n            query: `query ($id: ID!) {\n                miner(id: $id) {\n                    id\n                    address\n                    name\n                    bio\n                    owner {\n                      id\n                      address\n                      actor\n                      balance\n                      messages\n                      createdAt\n                      latestTransactionAt\n                    }\n                    worker {\n                      id\n                      address\n                      actor\n                      balance\n                      messages\n                      createdAt\n                      latestTransactionAt\n                    }\n                    contact {\n                      email\n                      slack\n                      website\n                      twitter\n                      email\n                    }\n                    verified\n                    serviceDetails {\n                      storage\n                      retrieval\n                      repair\n                      onlineDeals\n                      offlineDeals\n                      storageAskPrice\n                      retrievalAskPrice\n                      minPieceSize\n                      maxPieceSize\n                    }\n                    financeMetrics(since: 545000, till: 570000) {\n                      totalIncome\n                      totalExpenditure\n                      blockRewards\n                      storageDealPayments\n                      retrievalDealPayments\n                      networkFee\n                      penalty\n                      preCommitDeposits\n                      initialPledge\n                      lockedFunds\n                      availableFunds\n                    }\n                    qualityIndicators {\n                      winCount\n                      blocksMined\n                      qualityAdjPower\n                      feeDebt\n                      dataStored\n                      faultySectors\n                    }\n                    transactions(since: 545000, till: 570000) {\n                      id\n                      height\n                      amount\n                      sender\n                      receiver\n                      direction\n                      minerFee\n                      burnFee\n                      actorName\n                      methodName\n                      exitCode\n                    }\n                }\n              }`,\n            variables: {\n                id: this.props.match.params.address\n            }\n        },\n            {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(res => {\n                console.log(res.data)\n                var minerdata = res.data.data.miner\n                console.log('fetching textile data')\n\n                axios.get('https://minerindex.hub.textile.io/v1/index/miner/' + this.props.match.params.address, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                })\n                    .then(res => {\n                        console.log(res.data)\n                        var textiledata = res.data.info\n\n                        minerdata.location = textiledata.metadata.location\n\n                        minerdata.qualityIndicators.relativePower = textiledata.filecoin.relativePower\n                        minerdata.qualityIndicators.activeSectors = textiledata.filecoin.activeSectors\n\n                        minerdata.serviceDetails.storageAskPrice = textiledata.filecoin.askPrice\n                        minerdata.serviceDetails.sectorSize = textiledata.filecoin.sectorSize\n                        minerdata.serviceDetails.minPieceSize = textiledata.filecoin.minPieceSize\n                        minerdata.serviceDetails.maxPieceSize = textiledata.filecoin.maxPieceSize\n\n                        minerdata.storageDealSummary = textiledata.dealsSummary\n                        minerdata.retrievalDealSummary = textiledata.retrievalsSummary\n\n                        console.log('updated miner data')\n                        console.log(minerdata)\n\n                        console.log('fetching address history')\n                        axios.get('http://ec2-18-237-94-115.us-west-2.compute.amazonaws.com/addrChanges.json', {\n                            headers: {\n                                'Content-Type': 'application/json'\n                            }\n                        })\n                            .then(res => {\n                                console.log('address history fetched successfully')\n                                console.log(res.data)\n\n                                var minerId = this.props.match.params.address\n                                if (minerId in res.data) {\n                                    minerdata.ownerChanges = res.data[minerId].ownerChanges\n                                    minerdata.workerChanges = res.data[minerId].workerChanges\n                                } else {\n                                    minerdata.ownerChanges = null\n                                    minerdata.workerChanges = null\n                                }\n\n                                console.log('final miner data')\n                                console.log(minerdata)\n\n\n                                this.setState({ data: minerdata, responseStatus: \"success\" })\n\n                            })\n                            .catch(err => {\n                                console.log('failure in fetching address history')\n                                console.log(err)\n                                minerdata.ownerChanges = null\n                                minerdata.workerChanges = null\n\n                                this.setState({ data: null, responseStatus: \"failed\" })\n                            })\n\n                    })\n                    .catch(err => {\n                        console.log('failure in fetching data from textile')\n                        console.log(err)\n                        this.setState({ data: null, responseStatus: \"failed\" })\n                    })\n\n            })\n            .catch(err => {\n                console.log('failure in fetching data from miner marketplace api')\n                console.log(err)\n                this.setState({ data: null, responseStatus: \"failed\" })\n            })\n    }\n\n    formatFIL(value) {\n        if (value === \"\") {\n            value = 0\n        } else {\n            value = parseInt(value)\n        }\n        // console.log(value, typeof(value))\n        value = value / (10 ** 18)\n        // console.log(value)\n        value = value.toFixed(4)\n        // console.log(value)\n        return value.toString() + \" FIL\"\n    }\n\n    formatAdjPower(value) {\n        if (value === \"\") {\n            value = 0\n        } else {\n            value = parseInt(value)\n        }\n        // console.log(value, typeof(value))\n        if (value >= 1024 ** 6) {\n            value = value / (1024 ** 6)\n            value = value.toFixed(4)\n            value = value.toString() + \" EiB\"\n            return value\n        }\n        if (value >= 1024 ** 5) {\n            value = value / (1024 ** 5)\n            value = value.toFixed(4)\n            value = value.toString() + \" PiB\"\n            return value\n        }\n        if (value >= 1024 ** 4) {\n            value = value / (1024 ** 4)\n            value = value.toFixed(4)\n            value = value.toString() + \" TiB\"\n            return value\n        }\n        if (value >= 1024 ** 3) {\n            value = value / (1024 ** 3)\n            value = value.toFixed(4)\n            value = value.toString() + \" GiB\"\n            return value\n        }\n        if (value >= 1024 ** 2) {\n            value = value / (1024 ** 2)\n            value = value.toFixed(4)\n            value = value.toString() + \" MiB\"\n            return value\n        }\n        if (value >= 1024) {\n            value = value / (1024)\n            value = value.toFixed(4)\n            value = value.toString() + \" KiB\"\n            return value\n        }\n        return value.toString() + \" bytes\"\n    }\n\n    // makeRequest() {\n    //     return new Promise(function (resolve, reject) {\n    //         axios.get('http://ec2-18-237-94-115.us-west-2.compute.amazonaws.com/addrChanges.json', {\n    //             headers: {\n    //                 'Content-Type': 'application/json'\n    //             }\n    //         })\n    //             .then(res => {\n    //                 console.log('address history fetched successfully')\n    //                 console.log(res.data)\n    //                 resolve(res.data)\n    //             })\n    //             .catch(err => {\n    //                 console.log('failure in fetching address history')\n    //                 console.log(err)\n    //                 reject(null)\n    //             })\n    //     })\n    // }\n\n    // getAddressHistory() {\n    //     console.log('fetching address history')\n    //     var minerId = this.props.match.params.address\n\n    //     var addressHistory = await this.makeRequest()\n    //     var data = {}\n\n    //     if (addressHistory && minerId in res.data) {\n    //         data = res.data[minerId]\n    //     } else {\n    //         data = {\n    //             \"ownerChanges\": null,\n    //             \"workerChanges\": null\n    //         }\n    //     }\n\n    //     axios.get('http://ec2-18-237-94-115.us-west-2.compute.amazonaws.com/addrChanges.json', {\n    //         headers: {\n    //             'Content-Type': 'application/json'\n    //         }\n    //     })\n    //         .then(res => {\n    //             console.log('address history fetched successfully')\n    //             console.log(res.data)\n\n    //             if (minerId in res.data) {\n    //                 data = res.data[minerId]\n    //             } else {\n    //                 data = {\n    //                     \"ownerChanges\": null,\n    //                     \"workerChanges\": null\n    //                 }\n    //             }\n\n\n    //         })\n    //         .catch(err => {\n    //             console.log('failure in fetching address history')\n    //             console.log(err)\n    //             data = {\n    //                 \"ownerChanges\": null,\n    //                 \"workerChanges\": null\n    //             }\n    //         })\n\n    //     return data\n    // }\n\n    render() {\n        if (!this.state.responseStatus) {\n            return (\n                <React.Fragment>\n                    <p>Fetching data from the server...</p>\n                </React.Fragment>\n            )\n        } else {\n            if (this.state.data) {\n                var data = this.state.data\n                console.log(\"miner data\")\n                console.log(data)\n\n                // var history = this.getAddressHistory()\n                // console.log('history data')\n                // console.log(history)\n\n                return (\n                    <div>\n                        <PageHeader\n                            className=\"site-page-header\"\n                            backIcon=\"false\"\n                            title=\"Miner Profile \"\n                            subTitle={this.props.match.params.address}\n                        />\n                        {/* <PriceHistoryGraph data={this.state.data} style={{ width: \"80vw\", height: \"75vh\"}}/> */}\n                        <Card title=\"Basic Info\" style={{ width: \"93vw\" }}>\n                            <p>Name : {data.name} </p>\n                            <p>Bio : {data.bio} </p>\n                            <p>Location : {data.location} </p>\n                            <p>Id : {data.id} </p>\n                            <p>Owner : {data.owner.id} </p>\n                            <p>Worker : {data.worker.id} </p>\n                            <p>Verified: {data.verified ? \"Yes\" : \"No\"}</p>\n                        </Card>\n                        <br></br>\n                        <Card title=\"Contact\" style={{ width: \"93vw\" }}>\n                            <p>Slack : {data.contact.slack} </p>\n                            <p>Twitter : {data.contact.twitter} </p>\n                            <p>Email : {data.contact.email} </p>\n                            <p>Website : {data.contact.website} </p>\n                        </Card>\n                        <br></br>\n                        <Card title=\"Service Details\" style={{ width: \"93vw\" }}>\n                            <p>Storage : {data.serviceDetails.storage ? \"Yes\" : \"No\"} </p>\n                            <p>Retrieval : {data.serviceDetails.retrieval ? \"Yes\" : \"No\"} </p>\n                            <p>Repair : {data.serviceDetails.repair ? \"Yes\" : \"No\"} </p>\n                            <p>Online Deals : {data.serviceDetails.onlineDeals ? \"Yes\" : \"No\"} </p>\n                            <p>Offline Deals : {data.serviceDetails.offlineDeals ? \"Yes\" : \"No\"} </p>\n                            <p>Storage Ask Price : {this.formatFIL(data.serviceDetails.storageAskPrice) + \"/GiB/epoch\"} </p>\n                            <p>Retrieval Ask Price : {data.serviceDetails.retrievalAskPrice} </p>\n                            <p>Sector Size : {this.formatAdjPower(data.serviceDetails.sectorSize)} </p>\n                            <p>Minimum Piece Size : {this.formatAdjPower(data.serviceDetails.minPieceSize)} </p>\n                            <p>Maximum Piece Size : {this.formatAdjPower(data.serviceDetails.maxPieceSize)} </p>\n                        </Card>\n                        <br></br>\n                        <Card title=\"Financial Metrics\" style={{ width: \"93vw\" }}>\n                            <p>Total Income : {this.formatFIL(data.financeMetrics.totalIncome)} </p>\n                            <p>Total Expenditure : {this.formatFIL(data.financeMetrics.totalExpenditure)} </p>\n                            <p>Block Rewards : {this.formatFIL(data.financeMetrics.blockRewards)} </p>\n                            <p>Storage Deal Payments : {this.formatFIL(data.financeMetrics.blockRewards)} </p>\n                            <p>Retrieval Deal Payments : {this.formatFIL(data.financeMetrics.retrievalDealPayments)} </p>\n                            <p>Network Fee : {this.formatFIL(data.financeMetrics.networkFee)} </p>\n                            <p>Penalty : {this.formatFIL(data.financeMetrics.penalty)} </p>\n                            <p>PreCommit Deposits : {this.formatFIL(data.financeMetrics.preCommitDeposits)} </p>\n                            <p>Initial Pledge : {this.formatFIL(data.financeMetrics.initialPledge)} </p>\n                            <p>Locked Funds : {this.formatFIL(data.financeMetrics.lockedFunds)} </p>\n                            <p>Available Funds : {this.formatFIL(data.financeMetrics.availableFunds)} </p>\n                        </Card>\n                        <br></br>\n                        <Card title=\"Quality Indicators\" style={{ width: \"93vw\" }}>\n                            <p>Win Count : {data.qualityIndicators.winCount} </p>\n                            <p>Blocks Mined : {data.qualityIndicators.blocksMined} </p>\n                            <p>Quality Adjusted Power: {this.formatAdjPower(data.qualityIndicators.qualityAdjPower)} </p>\n                            <p>Active Sectors: {data.qualityIndicators.activeSectors} </p>\n                            <p>Faulty Sectors: {data.qualityIndicators.faultySectors} </p>\n                        </Card>\n                        <br></br>\n                        <Card title=\"Worker Address History\" style={{ width: \"93vw\" }}>\n                            <AddressChangeTable data={data.workerChanges}></AddressChangeTable>\n                        </Card>\n                        <br></br>\n                        <Card title=\"Owner Address History\" style={{ width: \"93vw\" }}>\n                            <AddressChangeTable data={data.ownerChanges}></AddressChangeTable>\n                        </Card>\n                        <br></br>\n                        <Card title=\"Transaction History\" style={{ width: \"93vw\" }}>\n                            <TransactionTable data={data.transactions}></TransactionTable>\n                        </Card>\n                        <br></br>\n                    </div>\n                )\n            } else {\n                return (\n                    <div>Error in fetching data from the server. See console for more details.</div>\n                )\n            }\n        }\n    }\n}\n\nexport default MinerProfile","import logo from './logo.svg'\nimport React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout } from 'antd';\nimport { Row, Col } from 'antd';\nimport { Modal } from 'antd';\nimport MinerSearch from './components/pages/MinerSearch'\nimport MinerProfile from './components/pages/MinerProfile'\nimport { SearchBar } from './components/SearchBar'\nconst { Header, Content, Footer } = Layout;\n\nexport class App extends Component {\n\n    // info() {\n    //     Modal.info({\n    //       title: 'There is a known issue for Brave browser.',\n    //       content: (\n    //         <div>\n    //             <br/>\n    //           <p>To resolve rendering issues on Brave,\n    //               <ul>\n    //                   <li>Go to Brave Shield settings</li>\n    //                   <li>Navigate to Device Recognition setting</li>\n    //                   <li> In the dropdown menu, select \"All device recognition attempts allowed\".</li>\n    //               </ul>\n    //             </p>\n    //           <p>If there is any other issue, please report <a href=\"https://github.com/buidl-labs/livepeer-pricing-tool/issues\">here</a>.</p>\n    //         </div>\n    //       ),\n    //       onOk() {},\n    //     });\n    //   }\n\n    render() {\n        return (\n            <Router>\n                <Layout className=\"layout\">\n                    <Header>\n                        <Row>\n                            <Col span={8}>\n                                {/* <Link to=\"/\">\n                                    <img src={logo} alt=\"Logo\" style={{ transform: \"rotate(-90deg)\" }} />\n                                </Link> */}\n                            </Col>\n                            <Col span={8}>\n                                <Link to=\"/\">\n                                    <h1 style={{ color: \"white\", textAlign: \"center\"}}> Filecoin Miner Marketplace </h1>    \n                                </Link>\n                            </Col>\n                            {/* <Col span={4}>\n                                <button type=\"button\" className=\"link-button\" onClick={this.info}>Facing rendering issues?</button>\n                            </Col> */}\n                            <Col span={8}>\n                                {/* <button type=\"button\" className=\"link-button\">\n                                    <a href=\"https://github.com/buidl-labs/livepeer-pricing-tool#faqs\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: \"white\" }}>FAQs</a>\n                                </button> */}\n                                {/* <SearchBar /> */}\n                            </Col>\n                        </Row>\n                    </Header>\n                    <Content style={{ padding: '0 50px', minHeight: '85vh' }}>\n                        <div className=\"site-layout-content\">\n                            {/* <Route exact path=\"/\" render={props => (\n                                <OrchestratorStats />\n                            )} />\n\n                            <Route path=\"/priceHistory/:address\" render={props => (\n                                <OrchestratorPriceHistory {...props} />\n                            )} /> */}\n                            <Route exact path=\"/\" render={props => (\n                                <MinerSearch />\n                            )} />\n\n                            <Route path=\"/miner/:address\" render={props => (\n                                <MinerProfile {...props} />\n                            )} />\n                        </div>\n                    </Content>\n                    <Footer style={{ textAlign: 'center' }}>\n                        Made with <span style={{ color: 'orangered' }}>&hearts;</span> by {' '}\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://buidllabs.io/\" className=\"card-link\">\n                        BUIDL Labs\n                        </a>.\n                    </Footer>\n                </Layout>\n            </Router>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}